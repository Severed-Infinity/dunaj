Differences from Dunaj

* no qualified special symbols
** cannot shadow special symbols with custom macros
** cannot unmap special symbols
* default imported classes are left untouched
  (they are unmapped in Dunaj)
** A consequence of this is that it is now not possible to 
   define e.g. String or Class deftype
** clashing deftypes have now + suffix
** String+, Class+, Number+, Integer+, Float+, Thread+
* more verbose ns declaration
** no :api declaration
** use dunaj.core/dunaj-ns instead
* no additional primitive types
** mainly boolean and int are missed
** iloop behaves the same as loop
* slower than Dunaj
* no custom capacity hint in `edit`
* fewer support for ICounted
* if ILookup, must also implement
** c.l.ILookup/valAt
** something from c.l.Associative, c.l.IPersistentSet, j.l.Map or j.l.Set
* if IIndexed, must also implement
** 2 args c.l.IIndexed/nth
* types no longer seqable (use d.c.h/red-to-seq instead)
** batches
* no support for c.c.contains?
** array adaptors
** reversed vector sections
* strings are not counted
* more boilerplate for custom collection types
** handling of Seqable, Indexed, Counted, Lookup
* TODO: check unchecked math tweaks in Compiler and how to go around this
